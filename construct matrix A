F <- 2
K <- 2
L <- 2
N <- F*K*L
library(rSymPy)
x1 <- Var("x1")
x2 <- Var("x2")
x3 <- Var("x3")
x4 <- Var("x4")
x5 <- Var("x5")

##w <- Var("w")

#define M
IN <- matrix(1, nrow = N, ncol = 1)
W <- matrix(3, nrow = N, ncol = 1)

m <- cbind(-x2 * IN, W-(x1 * IN))
M <- t(m)

#define V
IK <- matrix(1, nrow = K, ncol = 1)
IL <- matrix(1, nrow = L, ncol = 1)
DF <- diag(1, nrow = F, ncol = F)

z1 <- kronecker(DF,IL)
Z1 <- kronecker(IK,z1)

IFL <- matrix(1, nrow = F*L, ncol = 1)
DK <- diag(1, nrow = K, ncol = K)

Z2 <- kronecker(DK,IFL)

DFKL <- diag(1, nrow = N, ncol = N)

Z3 <- DFKL

z1 <- cbind(x3*Z1 %*% t(Z1))
z2 <- cbind(x4*Z2 %*% t(Z2))
z3 <- cbind(x5*Z3 %*% t(Z3))

Y1 <- matrix(z1, nrow = 8, ncol = 8)
Y2 <- matrix(z2, nrow = 8, ncol = 8)
Y3 <- matrix(z3, nrow = 8, ncol = 8)

Y1M <- M

v <- x3 * Z1.input + x4 * Z2.input  + x5* Z3.input

Inv <- function(x) Sym("(", x, ").inv()") #define inverse function
V <- Inv(v)

#define N
N <- rbind(-x2*IN, W-x1*IN)

#define A

A <- M %*% V %*% N
